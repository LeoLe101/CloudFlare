{"code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t);const r={headers:{\"Content-Type\":\"text/html\"}};addEventListener(\"fetch\",e=>{switch(e.request.method){case\"GET\":e.respondWith(async function(e){return async function(e){if(\"GET\"!==e.method)return new Response(\"Invalid Request received! Please check again.\");var t,n;try{var o=await fetch(\"https://cfw-takehome.developers.workers.dev/api/variants\");o.ok&&(t=await o.json());var a=(u=t.variants,l=Math.floor(Math.random()*u.length),u[l]),s=await fetch(a);s.ok&&(n=await s.text());var c=new Response(n,r);let i=(new HTMLRewriter).on(\"*\",{element(e){console.log(\"El\",e.tagName)},comments(e){console.log(\"Com\",e.text)},text(e){console.log(\"Text\",e.text)}}).transform(c);return console.log(\"request param\",e),console.log(\"Response from orginal URL\",o),console.log(\"Parsed JSON\",t),console.log(\"Variant url to be return\",a),console.log(\"Response from Variant URL\",s),i}catch(e){return new Response(e.message||e.toString(),{status:404})}var u,l}(e)}(e.request));break;case\"HEAD\":case\"POST\":case\"PUT\":case\"DELETE\":case\"PATCH\":case\"OPTIONS\":default:e.respondWith(async function(){return new Response(\"HTTP request method not supported! Please use GET only...\",{status:400})}())}})}]);","extractedComments":[]}